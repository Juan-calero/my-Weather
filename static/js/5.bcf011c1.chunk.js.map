{"version":3,"sources":["components/utils/weatherTypes.js","components/2.info/DetailCard.js"],"names":["weatherTypes","DetailCard","bigCard","useContext","MyContext","_useState","useState","_useState2","Object","slicedToArray","isChanged","setIsChanged","tMax","idWeatherType","index","useEffect","setTimeout","handleStyle","opacity","filter","transform","react_default","a","createElement","style","className","concat","detail__card","cardDynamicBg","dayOfTheWeek","icon","xmlns","viewBox","arrWeatherIcons","id","offset","path","d"],"mappings":"mIA+BeA,EA/BM,CACjB,uBACA,eACA,gBACA,UACA,gBACA,eACA,aACA,aACA,aACA,QACA,cACA,cACA,oBACA,oBACA,oBACA,WACA,UACA,WACA,OACA,WACA,wBACA,UACA,QACA,mBACA,0BACA,uBACA,WACA,yBCwBWC,UA9Cf,WAAsB,IACZC,EAAYC,qBAAWC,KAAvBF,QADYG,EAEcC,oBAAS,GAFvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEbK,EAFaH,EAAA,GAEFI,EAFEJ,EAAA,GAGZK,EAA+BV,EAA/BU,KAAMC,EAAyBX,EAAzBW,cAAeC,EAAUZ,EAAVY,MAE7BC,oBAAU,WACRJ,GAAa,GACbK,WAAW,WACTL,GAAa,IACZ,MACF,CAACT,IAEJ,IAAMe,EAAcP,EAChB,CACEQ,QAAS,IACTC,OAAQ,mBACRC,UAAW,aAEb,CACEF,QAAS,IACTC,OAAQ,OACRC,UAAW,YAGjB,OACEC,EAAAC,EAAAC,cAAA,OACEC,MAAOP,EACPQ,UAAS,GAAAC,OAAKC,eAAL,KAAAD,OAAqBE,YAAchB,KAC5CS,EAAAC,EAAAC,cAAA,SAAIM,YAAaf,IAChBD,GACCQ,EAAAC,EAAAC,cAAA,OACEE,UAAWK,OACXC,MAAM,6BACNC,QAASC,IAAgBpB,GAAemB,SACxCX,EAAAC,EAAAC,cAAA,kBAAgBW,GAAG,YACjBb,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYU,OAAO,OACnCd,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAWU,OAAO,UAEpCd,EAAAC,EAAAC,cAAA,QAAME,UAAWW,OAAMC,EAAGJ,IAAgBpB,GAAewB,KAG7DhB,EAAAC,EAAAC,cAAA,SAAIvB,EAAaa","file":"static/js/5.bcf011c1.chunk.js","sourcesContent":["const weatherTypes = [\r\n    'Sem Informação',\r\n    'Céu Limpo',\r\n    'Pouco Nublado',\r\n    'Nublado',\r\n    'Muito Nublado',\r\n    'Nuvens altas',\r\n    'Aguaceiros',\r\n    'Aguaceiros',\r\n    'Aguaceiros',\r\n    'Chuva',\r\n    'Chuva fraca',\r\n    'Chuva forte',\r\n    'Periodos de Chuva',\r\n    'Periodos de Chuva',\r\n    'Periodos de Chuva',\r\n    'Chuvisco',\r\n    \"Neblina\",\r\n    'Nevoeiro',\r\n    'Neve',\r\n    'Trovoada',\r\n    'Aguaceiros e trovoada',\r\n    'Granizo',\r\n    'Geada',\r\n    'Chuva e trovoada',\r\n    'Nebulosidade convectiva',\r\n    'Parcialmente Nublado',\r\n    'Nevoeiro',\r\n    'Nublado'\r\n]\r\n\r\nexport default weatherTypes","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { detail__card, path, icon } from \"./details.module.scss\"\r\nimport weatherTypes from \"../utils/weatherTypes\"\r\nimport arrWeatherIcons from \"../utils/arrWeatherIcons\"\r\nimport { MyContext, cardDynamicBg, dayOfTheWeek } from \"../utils/utils\"\r\n\r\nfunction DetailCard() {\r\n  const { bigCard } = useContext(MyContext)\r\n  const [isChanged, setIsChanged] = useState(false)\r\n  const { tMax, idWeatherType, index } = bigCard\r\n\r\n  useEffect(() => {\r\n    setIsChanged(true)\r\n    setTimeout(() => {\r\n      setIsChanged(false)\r\n    }, 200)\r\n  }, [bigCard])\r\n\r\n  const handleStyle = isChanged\r\n    ? {\r\n        opacity: \"0\",\r\n        filter: \"brightness(400%)\",\r\n        transform: \"scale(.1)\",\r\n      }\r\n    : {\r\n        opacity: \"1\",\r\n        filter: \"none\",\r\n        transform: \"scale(1)\",\r\n      }\r\n\r\n  return (\r\n    <div\r\n      style={handleStyle}\r\n      className={`${detail__card} ${cardDynamicBg(tMax)}`}>\r\n      <p>{dayOfTheWeek(index)}</p>\r\n      {idWeatherType && (\r\n        <svg\r\n          className={icon}\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox={arrWeatherIcons[idWeatherType].viewBox}>\r\n          <linearGradient id='gradient'>\r\n            <stop className='main-stop' offset='0%' />\r\n            <stop className='alt-stop' offset='100%' />\r\n          </linearGradient>\r\n          <path className={path} d={arrWeatherIcons[idWeatherType].d} />\r\n        </svg>\r\n      )}\r\n      <p>{weatherTypes[idWeatherType]}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailCard\r\n"],"sourceRoot":""}